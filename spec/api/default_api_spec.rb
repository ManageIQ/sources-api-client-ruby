=begin
#Topological Inventory

#Topological Inventory

OpenAPI spec version: 0.1.0
Contact: you@your-company.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 3.3.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SourcesApiClient::DefaultApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = SourcesApiClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@instance).to be_instance_of(SourcesApiClient::DefaultApi)
    end
  end

  # unit tests for create_authentication
  # Create a new Authentication
  # Creates a Authentication object
  # @param authentication Authentication attributes to create
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'create_authentication test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_endpoint
  # Create a new Endpoint
  # Creates a Endpoint object
  # @param endpoint Endpoint attributes to create
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'create_endpoint test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_source
  # Create a new Source
  # Creates a Source object
  # @param source Source attributes to create
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'create_source test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_source_type
  # Create a new SourceType
  # Creates a SourceType object
  # @param source_type SourceType attributes to create
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'create_source_type test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_authentication
  # Delete an existing Authentication
  # Deletes a Authentication object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_authentication test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_endpoint
  # Delete an existing Endpoint
  # Deletes a Endpoint object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_endpoint test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_source
  # Delete an existing Source
  # Deletes a Source object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_source test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_documentation
  # Return this API document in JSON format
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_documentation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_authentications
  # List Authentications
  # Returns an array of Authentication objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @return [AuthenticationsCollection]
  describe 'list_authentications test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_endpoint_authentications
  # List Authentications for Endpoint
  # Returns an array of Authentication objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @return [AuthenticationsCollection]
  describe 'list_endpoint_authentications test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_endpoints
  # List Endpoints
  # Returns an array of Endpoint objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @return [EndpointsCollection]
  describe 'list_endpoints test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_availabilities
  # List Availabilities for Source
  # Returns an array of Availability objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @return [AvailabilitiesCollection]
  describe 'list_source_availabilities test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_endpoints
  # List Endpoints for Source
  # Returns an array of Endpoint objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @return [EndpointsCollection]
  describe 'list_source_endpoints test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_type_availabilities
  # List Availabilities for SourceType
  # Returns an array of Availability objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @return [AvailabilitiesCollection]
  describe 'list_source_type_availabilities test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_type_sources
  # List Sources for SourceType
  # Returns an array of Source objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @return [SourcesCollection]
  describe 'list_source_type_sources test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_types
  # List SourceTypes
  # Returns an array of SourceType objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @return [SourceTypesCollection]
  describe 'list_source_types test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_sources
  # List Sources
  # Returns an array of Source objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @return [SourcesCollection]
  describe 'list_sources test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_authentication
  # Show an existing Authentication
  # Returns a Authentication object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Authentication]
  describe 'show_authentication test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_endpoint
  # Show an existing Endpoint
  # Returns a Endpoint object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Endpoint]
  describe 'show_endpoint test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_source
  # Show an existing Source
  # Returns a Source object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Source]
  describe 'show_source test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_source_type
  # Show an existing SourceType
  # Returns a SourceType object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [SourceType]
  describe 'show_source_type test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_authentication
  # Update an existing Authentication
  # Updates a Authentication object
  # @param id ID of the resource
  # @param authentication Authentication attributes to update
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_authentication test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_endpoint
  # Update an existing Endpoint
  # Updates a Endpoint object
  # @param id ID of the resource
  # @param endpoint Endpoint attributes to update
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_endpoint test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_source
  # Update an existing Source
  # Updates a Source object
  # @param id ID of the resource
  # @param source Source attributes to update
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_source test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
